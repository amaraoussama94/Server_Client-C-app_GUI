# /**
#  * @file build-release.yml
#  * @brief Unified GitHub Actions workflow for cross-platform build, version bump via pull request,
#  *        automated tagging and release.
#  *
#  *        - Builds Windows and Linux binaries using Make (output: build/bin/)
#  *        - Packages and uploads artifacts as windows-binaries and linux-binaries
#  *        - Detects latest tag (SRV_CLE_GEN_GUI_X.Y), increments version, and updates VERSION file
#  *        - Opens a pull request only if VERSION changes (with debug logs)
#  *        - Creates annotated tag and GitHub release after PR merge
#  *
#  *        Complies with branch protection rules by avoiding direct pushes to main.
#  *        Includes debug logs for versioning, PR creation, and release steps.
#  *        Designed for modular, contributor-friendly client-server architecture validation.
#  *
#  * @author Oussama Amara
#  * @version 2.0
#  * @date 2025-10-19
#  */

name: Cross-Platform Build, Version Bump & Release

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-windows:
    name: Build on Windows
    runs-on: windows-latest
    defaults:
      run:
        shell: bash

    steps:
    - name: 🧾 Checkout code
      uses: actions/checkout@v3

    - name: 🛠 Set up MSYS2 for GCC and Make
      uses: msys2/setup-msys2@v2
      with:
        update: true
        install: >-
          base-devel
          mingw-w64-x86_64-gcc
          make

    - name: 🧱 Build Windows binaries
      run: |
        make clean
        make all

    - name: 📦 Package Windows binaries
      run: |
        mkdir -p dist/windows-binaries
        cp build/bin/*.exe dist/windows-binaries/

    - name: 📤 Upload Windows artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-binaries
        path: dist/windows-binaries/

  build-linux:
    name: Build on Linux
    runs-on: ubuntu-latest

    steps:
    - name: 🧾 Checkout code
      uses: actions/checkout@v3

    - name: 🛠 Install build tools
      run: sudo apt-get update && sudo apt-get install -y build-essential

    - name: 🧱 Build Linux binaries
      run: |
        make clean
        make all

    - name: 📦 Package Linux binaries
      run: |
        mkdir -p dist/linux-binaries
        cp build/bin/* dist/linux-binaries/

    - name: 📤 Upload Linux artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-binaries
        path: dist/linux-binaries/

  tag-and-release:
    name: Version Bump PR + Release
    needs: [build-windows, build-linux]
    runs-on: ubuntu-latest

    steps:
    - name: 🧾 Checkout code
      uses: actions/checkout@v3

    - name: 🔐 Configure Git identity
      run: |
        git config --global user.name "github-actions[bot]"
        git config --global user.email "github-actions[bot]@users.noreply.github.com"

    - name: 🔢 Detect and increment version
      id: versioning
      run: |
        git fetch --tags
        echo "🔍 Fetching latest version tag..."
        LATEST_TAG=$(git tag | grep '^SRV_CLE_GEN_GUI_' | sort -V | tail -n1)
        echo "🔎 Latest tag: $LATEST_TAG"

        if [ -z "$LATEST_TAG" ]; then
          NEW_VERSION="1.0"
        else
          BASE_VERSION=${LATEST_TAG#SRV_CLE_GEN_GUI_}
          MAJOR=$(echo $BASE_VERSION | cut -d. -f1)
          MINOR=$(echo $BASE_VERSION | cut -d. -f2)

          if [ "$MINOR" -lt 9 ]; then
            NEW_VERSION="$MAJOR.$((MINOR + 1))"
          else
            NEW_VERSION="$((MAJOR + 1)).0"
          fi
        fi

        echo "🆕 Proposed new version: $NEW_VERSION"

        CURRENT_VERSION=$(cat VERSION || echo "")
        echo "📄 Current VERSION file: $CURRENT_VERSION"

        if [ "$CURRENT_VERSION" != "$NEW_VERSION" ]; then
          echo "$NEW_VERSION" > VERSION
          echo "version=$NEW_VERSION" >> $GITHUB_OUTPUT
          echo "📄 VERSION updated to $NEW_VERSION"
        else
          echo "✅ VERSION already up to date. Skipping update."
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        fi

    - name: 🛑 Check for actual diff before PR
      run: |
        echo "🔍 Checking for diff in VERSION file..."
        git add VERSION
        if git diff --cached --quiet; then
          echo "✅ No staged changes in VERSION. Skipping PR."
          exit 0
        else
          echo "📌 VERSION file has changes. Proceeding with PR."
        fi

    - name: 🔁 Create Pull Request
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GUI_TOKEN }}
        branch: version-bump-${{ steps.versioning.outputs.version }}
        title: "chore: bump version to ${{ steps.versioning.outputs.version }}"
        body: |
          Automated version bump to `${{ steps.versioning.outputs.version }}`.
          Triggered by successful builds on Windows and Linux.
        labels: version-bump, automated
        assignees: OussamaAmara

    - name: 🧾 Checkout after merge
      if: github.ref == 'refs/heads/main'
      uses: actions/checkout@v3

    - name: 🔢 Read merged version
      if: github.ref == 'refs/heads/main'
      id: merged-version
      run: |
        VERSION=$(cat VERSION)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: 🏷 Create and push tag
      if: github.ref == 'refs/heads/main'
      run: |
        TAG="SRV_CLE_GEN_GUI_${{ steps.merged-version.outputs.version }}"
        echo "🏷 Creating tag: $TAG"
        if git rev-parse "$TAG" >/dev/null 2>&1; then
          echo "⚠️ Tag $TAG already exists. Skipping."
        else
          git tag -a "$TAG" -m "Auto-generated tag: $TAG"
          git push origin "$TAG"
        fi

    - name: 📥 Download artifacts
      if: github.ref == 'refs/heads/main'
      uses: actions/download-artifact@v4
      with:
        path: dist/

    - name: 🚀 Create GitHub Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        name: Release ${{ steps.merged-version.outputs.version }}
        tag_name: SRV_CLE_GEN_GUI_${{ steps.merged-version.outputs.version }}
        files: |
          dist/windows-binaries/*.exe
          dist/linux-binaries/*
